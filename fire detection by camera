import cv2
import numpy as np

def detect_fire():
    model_path = 'models/mobilenet_ssd/MobileNetSSD_deploy.caffemodel'
    prototxt_path = 'models/mobilenet_ssd/MobileNetSSD_deploy.prototxt'
    net = cv2.dnn.readNetFromCaffe(prototxt_path, model_path)

    class_labels = ['background', 'aeroplane', 'bicycle', 'bird', 'boat',
                    'bottle', 'bus', 'car', 'cat', 'chair', 'cow', 'diningtable',
                    'dog', 'horse', 'motorbike', 'person', 'pottedplant', 'sheep',
                    'sofa', 'train', 'tvmonitor']

    confidence_threshold = 0.2

    cap = cv2.VideoCapture(0)

    while True:
        ret, frame = cap.read()

        blob = cv2.dnn.blobFromImage(frame, 0.007843, (300, 300), 127.5)

        net.setInput(blob)
        detections = net.forward()

        for i in range(detections.shape[2]):
            confidence = detections[0, 0, i, 2]

            if confidence > confidence_threshold:
                class_id = int(detections[0, 0, i, 1])
                if class_labels[class_id] == 'fire':
                    box = detections[0, 0, i, 3:7] * np.array([frame.shape[1], frame.shape[0], frame.shape[1], frame.shape[0]])
                    (startX, startY, endX, endY) = box.astype('int')

                    cv2.rectangle(frame, (startX, startY), (endX, endY), (0, 255, 0), 2)
                    label = f'{class_labels[class_id]}: {confidence:.2f}'
                    cv2.putText(frame, label, (startX, startY - 15),
                                cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

        cv2.imshow('Fire Detection', frame)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()

    
    cv2.destroyAllWindows()

if __name__ == "__main__":
    detect_fire()
